name: openrocket
base: core22
grade: stable
confinement: strict
adopt-info: openrocket
summary: A free, fully featured model rocket simulator.
description: |
  OpenRocket is a free, fully featured model rocket simulator...

architectures:
  - build-on: [amd64]
  - build-on: [arm64]
  - build-on: [armhf]
  - build-on: [ppc64el]
  - build-on: [s390x]

apps:
  openrocket:
    command: bin/launcher
    plugs:
      - home
      - network
      - cups-control
      - opengl
      - x11
      - wayland
      - desktop
      - desktop-legacy
      - gsettings
    environment:
      JAVA_HOME: "$SNAP/usr/lib/jvm/java-17-openjdk-$SNAP_ARCH"

parts:
  openrocket:
    plugin: nil
    source: .
    build-packages:
      - openjdk-17-jdk
      - ca-certificates
      - ca-certificates-java
      - unzip
    stage-packages:
      - openjdk-17-jre
      - ca-certificates
      - ca-certificates-java
    override-build: |
      set -eux

      # Prepare local Gradle home (keeps cache inside the part)
      export GRADLE_USER_HOME="$CRAFT_PART_BUILD/.gradle"

      # If Launchpad provided proxies, map them to Gradle system properties
      write_proxy_props() {
        proto="$1" ; var="${proto}_proxy"
        url="${!var:-}"
        [ -z "$url" ] && return 0
        # strip scheme, take host and port
        host_port="$(printf %s "$url" | sed -E 's#^[a-z]+://##' | cut -d/ -f1)"
        host="${host_port%%:*}"
        port="${host_port##*:}"
        {
          echo "systemProp.${proto}.proxyHost=${host}"
          echo "systemProp.${proto}.proxyPort=${port}"
          # optional: bypass for common local nets
          echo "systemProp.${proto}.nonProxyHosts=localhost|127.0.0.1|10.*|192.168.*|*.internal"
        } >> "$GRADLE_USER_HOME/gradle.properties"
      }
      mkdir -p "$GRADLE_USER_HOME"
      : > "$GRADLE_USER_HOME/gradle.properties"
      write_proxy_props http
      write_proxy_props https

      # --- Ensure wrapper JVM starts without ZGC for armhf, ppc64el, and s390x ---
      ARCH="$(dpkg --print-architecture)"
      case "$ARCH" in
        armhf|ppc64el|s390x)
          # 1) ensure wrapper/daemon donâ€™t request ZGC
          sed -i 's/"-XX:+UseZGC"//g' ./gradlew || true
          echo 'org.gradle.jvmargs=-Xmx1024m -XX:+UseG1GC' >> "$GRADLE_USER_HOME/gradle.properties"
          # 2) scrub env-injected JVM opts (wrapper reads these)
          [ -n "${JAVA_TOOL_OPTIONS:-}" ] && export JAVA_TOOL_OPTIONS="$(printf '%s' "$JAVA_TOOL_OPTIONS" | sed 's/-XX:+UseZGC//g')"
          [ -n "${_JAVA_OPTIONS:-}" ]    && export _JAVA_OPTIONS="$(printf '%s' "$_JAVA_OPTIONS" | sed 's/-XX:+UseZGC//g')"
          [ -n "${GRADLE_OPTS:-}" ]      && export GRADLE_OPTS="$(printf '%s' "$GRADLE_OPTS" | sed 's/-XX:+UseZGC//g')"
          ;;
      esac

      # Build
      ./gradlew --no-daemon -g "$GRADLE_USER_HOME" clean jar

      # Pick jar
      JAR="$(ls -1 build/libs/OpenRocket-*.jar | head -n1)"
      install -Dm644 "$JAR" "$CRAFT_PART_INSTALL/OpenRocket.jar"

      # Set the version
      BV="$(grep -E '^build\.version=' core/src/main/resources/build.properties | cut -d= -f2)"
      HASH="$(git rev-parse --short=7 HEAD 2>/dev/null || echo 0000000)"
      
      if printf '%s' "$BV" | grep -q 'SNAPSHOT$'; then
      VERSION="${BV%SNAPSHOT}-g${HASH}"     # e.g. 25.xx.-g1a2b3c4
      else
      VERSION="$BV"                         # e.g. 25.12
      fi
      
      # trim and set (max 32 chars)
      VERSION="${VERSION#v}"
      VERSION="${VERSION:0:32}"
      craftctl set version="$VERSION"
    prime:
      # If you actually want to keep HTTPS working, delete these three lines:
      - -usr/lib/jvm/java-*/lib/security/cacerts
      - -usr/lib/jvm/java-*/jre/lib/security/cacerts
      - -usr/lib/jvm/java-*/lib/security/blacklisted.certs

  launcher:
    plugin: dump
    source: snap/local
    source-type: local
    organize:
      launcher: bin/launcher
